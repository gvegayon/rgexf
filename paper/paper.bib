@Manual{R,
    title = {R: A Language and Environment for Statistical Computing},
    author = {{R Core Team}},
    organization = {R Foundation for Statistical Computing},
    address = {Vienna, Austria},
    year = {2019},
    url = {https://www.R-project.org/}
  }

@article{hastings1970,
  title={Monte Carlo sampling methods using Markov chains and their applications},
  author={Hastings, W Keith},
  year={1970},
  publisher={Oxford University Press},
  doi={10.2307/2334940}
}

@article{metropolis1953,
  title={Equation of state calculations by fast computing machines},
  author={Metropolis, Nicholas and Rosenbluth, Arianna W and Rosenbluth, Marshall N and Teller, Augusta H and Teller, Edward},
  journal={The journal of chemical physics},
  volume={21},
  number={6},
  pages={1087--1092},
  year={1953},
  publisher={AIP},
  doi={10.1063/1.1699114}
}


@article{Martin2011,
   author = {Andrew Martin and Kevin Quinn and Jong Hee Park},
   title = {MCMCpack: Markov Chain Monte Carlo in R},
   journal = {Journal of Statistical Software, Articles},
   volume = {42},
   number = {9},
   year = {2011},
   keywords = {},
   abstract = {We introduce MCMCpack, an R package that contains functions to perform Bayesian inference using posterior simulation for a number of statistical models. In addition to code that can be used to fit commonly used models, MCMCpack also contains some useful utility functions, including some additional density functions and pseudo-random number generators for statistical distributions, a general purpose Metropolis sampling algorithm, and tools for visualization.},
   issn = {1548-7660},
   pages = {1--21},
   doi = {10.18637/jss.v042.i09},
   url = {https://www.jstatsoft.org/v042/i09}
}

@Manual{Geyer2019,
    title = {mcmc: Markov Chain Monte Carlo},
    author = {Charles J. Geyer and Leif T. Johnson},
    year = {2019},
    note = {R package version 0.9-6},
    url = {https://CRAN.R-project.org/package=mcmc},
  }
  
@Article{Plummer2006,
    title = {CODA: Convergence Diagnosis and Output Analysis for MCMC},
    author = {Martyn Plummer and Nicky Best and Kate Cowles and Karen Vines},
    journal = {R News},
    year = {2006},
    volume = {6},
    number = {1},
    pages = {7--11},
    url = {https://journal.r-project.org/archive/},
    pdf = {https://www.r-project.org/doc/Rnews/Rnews_2006-1.pdf},
  }

@Manual{Morey2009,
    title = {HybridMC: Implementation of the Hybrid Monte Carlo and Multipoint Hybrid
Monte Carlo sampling techniques},
    author = {Richard D. Morey},
    year = {2009},
    note = {R package version 0.2},
    url = {https://CRAN.R-project.org/package=HybridMC},
  }

@Manual{Scheidegger2019,
    title = {adaptMCMC: Implementation of a Generic Adaptive Monte Carlo Markov Chain
Sampler},
    author = {Andreas Scheidegger},
    year = {2018},
    note = {R package version 1.3},
    url = {https://CRAN.R-project.org/package=adaptMCMC},
  }

@Misc{Stan2018,
    title = {{RStan}: the {R} interface to {Stan}},
    author = {{Stan Development Team}},
    note = {R package version 2.18.2},
    year = {2018},
    url = {http://mc-stan.org/},
  }  


@article{Stan2017,
title = {Stan : A Probabilistic Programming Language},
author = {Carpenter, Bob and Gelman, Andrew and Hoffman, Matthew D. and Lee, Daniel and Goodrich, Ben and Betancourt, Michael and Brubaker, Marcus and Guo, Jiqiang and Li, Peter and Riddell, Allen},
abstractNote = {Stan is a probabilistic programming language for specifying statistical models. A Stan program imperatively defines a log probability function over parameters conditioned on specified data and constants. As of version 2.14.0, Stan provides full Bayesian inference for continuous-variable models through Markov chain Monte Carlo methods such as the No-U-Turn sampler, an adaptive form of Hamiltonian Monte Carlo sampling. Penalized maximum likelihood estimates are calculated using optimization methods such as the limited memory Broyden-Fletcher-Goldfarb-Shanno algorithm. Stan is also a platform for computing log densities and their gradients and Hessians, which can be used in alternative algorithms such as variational Bayes, expectation propagation, and marginal inference using approximate integration. To this end, Stan is set up so that the densities, gradients, and Hessians, along with intermediate quantities of the algorithm such as acceptance probabilities, are easily accessible. Stan can also be called from the command line using the cmdstan package, through R using the rstan package, and through Python using the pystan package. All three interfaces support sampling and optimization-based inference with diagnostics and posterior analysis. rstan and pystan also provide access to log probabilities, gradients, Hessians, parameter transforms, and specialized plotting.},
doi = {10.18637/jss.v076.i01},
journal = {Journal of Statistical Software},
issn = {1548-7660},
number = 1,
volume = 76,
place = {United States},
year = {2017},
month = {1}
}


@article{Gelman1992,
  title={Inference from iterative simulation using multiple sequences},
  author={Gelman, Andrew and Rubin, Donald B and others},
  journal={Statistical science},
  volume={7},
  number={4},
  pages={457--472},
  year={1992},
  publisher={Institute of Mathematical Statistics},
  doi={10.1214/ss/1177011136}
}

@book{Geweke1991,
  title={Evaluating the accuracy of sampling-based approaches to the calculation of posterior moments},
  author={Geweke, John and others},
  volume={196},
  year={1991},
  publisher={Federal Reserve Bank of Minneapolis, Research Department Minneapolis, MN}
}

@Article{Sturtz2005,
    title = {R2WinBUGS: A Package for Running WinBUGS from R},
    author = {Sibylle Sturtz and Uwe Ligges and Andrew Gelman},
    journal = {Journal of Statistical Software},
    year = {2005},
    pages = {1--16},
    number = {3},
    volume = {12},
    url = {http://www.jstatsoft.org},
    doi = {10.18637/jss.v012.i03}
  }

